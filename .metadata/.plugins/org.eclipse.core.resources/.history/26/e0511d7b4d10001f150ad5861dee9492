package com.books.app.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.books.app.facade.ExchangeRequestFacade;
import com.books.app.pojo.BooksResource;
import com.books.app.pojo.ExchangeRequestResource;
import com.books.app.pojo.MessageResponse;

@RestController
@RequestMapping("/exchangeRequests")
public class ExchangeRequestController {
	
	@Autowired
	ExchangeRequestFacade exchangeRequestFacade;

    @PostMapping
    public ResponseEntity<?> createExchangeRequest(@RequestBody ExchangeRequestResource exchangeRequestResource) {
    	
        exchangeRequestFacade.createExchangeRequest(exchangeRequestResource);
        
        return ResponseEntity.ok(new MessageResponse("Exchange Request is placed!"));
    }
    
  //GET - books with filters
  	@CrossOrigin(origins = "*", exposedHeaders = "**")
  	@PreAuthorize("hasRole('ROLE_ADMIN')")
  	@RequestMapping(value = "/books", method = { RequestMethod.GET }, produces = {
  			MediaType.APPLICATION_JSON_VALUE })
      public ResponseEntity<?> getExchangeRequests() {
       
          // Call facade method to get books with optional search criteria
          List<ExchangeRequestResource> books = exchangeRequestFacade.getExchangeRequests();

          return ResponseEntity.ok(books);
      }
    
    
  //GET - books by username
  	@CrossOrigin(origins = "*", exposedHeaders = "**")
  	@PreAuthorize("hasAnyRole('ROLE_USER')")
  	@RequestMapping(value = "/{username}", method = { RequestMethod.GET }, produces = {
  			MediaType.APPLICATION_JSON_VALUE })
  	public ResponseEntity<?> getExchangeRequest(@PathVariable("username") String username) {

  		List<BooksResource> books = exchangeRequestFacade.getExchangeRequestsByUsername(username);

  		return ResponseEntity.ok(books);
  	}

}
