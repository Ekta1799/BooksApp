package com.example.model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import lombok.Data;

@Entity
@Data
@Table(name = "user_profile")
public class UserProfile {

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Long id;
	
	@ManyToOne
    @JoinColumn(name = "user_id")
	private User user_id;

	private String firstname;

	private String lastname;

	private String username;

	private String phone_no;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public User getUser_id() {
		return user_id;
	}

	public void setUser_id(User user_id) {
		this.user_id = user_id;
	}

	public String getFirstname() {
		return firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	public String getLastname() {
		return lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPhone_no() {
		return phone_no;
	}

	public void setPhone_no(String phone_no) {
		this.phone_no = phone_no;
	}

//	@ManyToMany(fetch = FetchType.LAZY)
//	@JoinTable(name = "user_fav_genre", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = {
//			@JoinColumn(name = "genre_id")})
//	private Set<Genres> favorite_genre_id;
//
//	@ManyToMany(fetch = FetchType.LAZY)
//	@JoinTable(name = "user_reading_preference", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = {
//			@JoinColumn(name = "book_id")})
//	private Set<Books> reading_preference_id;
//
//	@ManyToMany(fetch = FetchType.LAZY)
//	@JoinTable(name = "user_book_owned_list", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = {
//			@JoinColumn(name = "book_id") })
//	private Set<Books> books_owned_id;
//
//	@ManyToMany(fetch = FetchType.LAZY)
//	@JoinTable(name = "user_book_wish_list", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = {
//			@JoinColumn(name = "book_id") })
//	private Set<Books> books_wishlist_id;

}
