package com.books.app.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.books.app.model.ExchangeRequest;

@RestController
@RequestMapping("/exchange-requests")
public class ExchangeRequestController {

    private final ExchangeRequestService exchangeRequestService;

    @Autowired
    public ExchangeRequestController(ExchangeRequestService exchangeRequestService) {
        this.exchangeRequestService = exchangeRequestService;
    }

    @PostMapping
    public ResponseEntity<ExchangeRequest> createExchangeRequest(@RequestBody ExchangeRequest exchangeRequest) {
        ExchangeRequest createdRequest = exchangeRequestService.createExchangeRequest(exchangeRequest);
        return new ResponseEntity<>(createdRequest, HttpStatus.CREATED);
    }

    @GetMapping("/{id}")
    public ResponseEntity<ExchangeRequest> getExchangeRequestById(@PathVariable Long id) {
        ExchangeRequest request = exchangeRequestService.getExchangeRequestById(id);
        return ResponseEntity.ok(request);
    }

    @GetMapping
    public ResponseEntity<List<ExchangeRequest>> getAllExchangeRequests() {
        List<ExchangeRequest> exchangeRequests = exchangeRequestService.getAllExchangeRequests();
        return ResponseEntity.ok(exchangeRequests);
    }

    // Add additional endpoints for updating, deleting, and searching exchange requests as needed
}
